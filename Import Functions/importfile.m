function [ExchangeDate,Close] = importfile(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE2 Import data from a spreadsheet
%   [ExchangeDate,Close] = IMPORTFILE2(FILE) reads data from the first
%   worksheet in the Microsoft Excel spreadsheet file named FILE and
%   returns the data as column vectors.
%
%   [ExchangeDate,Close] = IMPORTFILE2(FILE,SHEET) reads from the specified
%   worksheet.
%
%   [ExchangeDate,Close] = IMPORTFILE2(FILE,SHEET,STARTROW,ENDROW) reads
%   from the specified worksheet for the specified row interval(s). Specify
%   STARTROW and ENDROW as a pair of scalars or vectors of matching size
%   for dis-contiguous row intervals. To read to the end of the file
%   specify an ENDROW of inf.%
% Example:
%   [ExchangeDate,Close] = importfile2('sp500_monthly .xlsx','Sheet 1',15,114);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2019/04/06 13:10:19

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 15;
    endRow = 114;
end

%% Import the data, extracting spreadsheet dates in Excel serial date format
[~, ~, raw, dates] = xlsread(workbookFile, sheetName, sprintf('A%d:B%d',startRow(1),endRow(1)),'' , @convertSpreadsheetExcelDates);
for block=2:length(startRow)
    [~, ~, tmpRawBlock,tmpDateNumBlock] = xlsread(workbookFile, sheetName, sprintf('A%d:B%d',startRow(block),endRow(block)),'' , @convertSpreadsheetExcelDates);
    raw = [raw;tmpRawBlock]; %#ok<AGROW>
    dates = [dates;tmpDateNumBlock]; %#ok<AGROW>
end
raw = raw(:,2);
dates = dates(:,1);

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
dates(~cellfun(@(x) isnumeric(x) || islogical(x), dates)) = {NaN};
ExchangeDate = datetime([dates{:,1}].', 'ConvertFrom', 'Excel');
Close = data(:,1);

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% ExchangeDate=datenum(ExchangeDate);

