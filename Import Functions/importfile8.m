function [Date1,PX_LAST] = importfile8(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE8 Import data from a spreadsheet
%   [Date1,PX_LAST] = IMPORTFILE8(FILE) reads data from the first worksheet
%   in the Microsoft Excel spreadsheet file named FILE and returns the data
%   as column vectors.
%
%   [Date1,PX_LAST] = IMPORTFILE8(FILE,SHEET) reads from the specified
%   worksheet.
%
%   [Date1,PX_LAST] = IMPORTFILE8(FILE,SHEET,STARTROW,ENDROW) reads from
%   the specified worksheet for the specified row interval(s). Specify
%   STARTROW and ENDROW as a pair of scalars or vectors of matching size
%   for dis-contiguous row intervals. To read to the end of the file
%   specify an ENDROW of inf.
%
%	Non-numeric cells are replaced with: NaN
%
% Example:
%   [Date1,PX_LAST] = importfile8('bond us government .xlsx','Worksheet',7,106);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2019/04/06 13:48:39

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 7;
    endRow = 106;
end

%% Import the data, extracting spreadsheet dates in Excel serial date format
[~, ~, raw, dates] = xlsread(workbookFile, sheetName, sprintf('A%d:B%d',startRow(1),endRow(1)),'' , @convertSpreadsheetExcelDates);
for block=2:length(startRow)
    [~, ~, tmpRawBlock,tmpDateNumBlock] = xlsread(workbookFile, sheetName, sprintf('A%d:B%d',startRow(block),endRow(block)),'' , @convertSpreadsheetExcelDates);
    raw = [raw;tmpRawBlock]; %#ok<AGROW>
    dates = [dates;tmpDateNumBlock]; %#ok<AGROW>
end
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
raw = raw(:,2);
dates = dates(:,1);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),dates); % Find non-numeric cells
dates(R) = {NaN}; % Replace non-numeric Excel dates with NaN

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
dates(~cellfun(@(x) isnumeric(x) || islogical(x), dates)) = {NaN};
Date1 = datetime([dates{:,1}].', 'ConvertFrom', 'Excel');
PX_LAST = data(:,1);

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% Date1=datenum(Date1);

